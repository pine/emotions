buildscript {
    ext {
        googleCloudBomVersion = '0.110.0-alpha'
        kotlinVersion = '1.3.50'
        lombokVersion = '1.18.22'
        okhttp3Version = '4.2.2'
        powermockVersion = '2.0.9'
        springBootVersion = '2.6.5'
    }
    repositories {
        gradlePluginPortal()
        maven { url 'https://repo.spring.io/plugins-release' }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
        classpath 'io.spring.gradle:dependency-management-plugin:1.0.5.RELEASE'
        classpath 'net.rdrei.android.buildtimetracker:gradle-plugin:0.11.0'
        classpath 'org.gradle:test-retry-gradle-plugin:1.3.1'
    }
}

plugins {
    id 'com.github.spotbugs' version '5.0.6' apply false
}

apply plugin: 'java'

configure(subprojects.findAll { it.name == 'app' || it.name.startsWith('tool-') }) {
    apply plugin: 'java'
}

configure(subprojects.findAll { it.name.startsWith('lib-') }) {
    apply plugin: 'java-library'
}

allprojects {
    apply plugin: 'idea'

    group 'moe.pine.emotions'

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17

    repositories {
        mavenCentral()
    }

    compileJava {
        options.encoding = 'UTF-8'
        options.compilerArgs << '-Xlint:unchecked'
        options.compilerArgs << '-Xlint:deprecation'
    }

    apply plugin: 'org.gradle.test-retry'

    test {
        useJUnitPlatform()

        retry {
            maxRetries = 3
            maxFailures = 20
        }
    }


    // ----- JaCoCo ---------------------------------------

    apply plugin: 'jacoco'

    jacoco {
        toolVersion = '0.8.7'
    }
}

subprojects {
    apply plugin: 'io.spring.dependency-management'

    dependencyManagement {
        imports {
            mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
            mavenBom "com.google.cloud:google-cloud-bom:$googleCloudBomVersion"
            mavenBom "org.jetbrains.kotlin:kotlin-bom:$kotlinVersion"
            mavenBom 'org.testcontainers:testcontainers-bom:1.15.3'
        }
        dependencies {
            // Jasypt
            dependency 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.4'

            // Guava
            dependency 'com.google.guava:guava:27.0.1-jre'

            // SDK
            dependency 'org.twitter4j:twitter4j-core:4.0.7'
            dependency 'org.apache.xmlrpc:xmlrpc-client:3.1.3'

            // Apache Commons
            dependency 'commons-codec:commons-codec:1.11'
            dependency 'commons-fileupload:commons-fileupload:1.4'
            dependency 'commons-io:commons-io:2.11.0'
            dependency 'org.apache.commons:commons-lang3:3.8.1'
            dependency 'org.apache.commons:commons-collections4:4.3'
            dependency 'org.apache.httpcomponents:httpclient:4.5.10'

            // HTML parser
            dependency 'org.jsoup:jsoup:1.12.1'

            // Utilities
            dependency "org.projectlombok:lombok:$lombokVersion"
            dependency 'com.github.maricn:logback-slack-appender:1.4.0'

            // My Utilities
            dependency 'moe.pine:heroku-addons:0.3.3'
            dependency 'moe.pine:spring-cache-interceptors:0.2.0'
            dependency 'moe.pine:reactor-interruptible:0.1.1'

            // Test
            dependency "org.powermock:powermock-reflect:$powermockVersion"
            dependency "com.squareup.okhttp3:okhttp:$okhttp3Version"
            dependency "com.squareup.okhttp3:mockwebserver:$okhttp3Version"
        }
    }

    dependencies {
        // Lombok
        annotationProcessor 'org.projectlombok:lombok'
        compileOnly 'org.projectlombok:lombok'
        testAnnotationProcessor 'org.projectlombok:lombok'
        testCompileOnly 'org.projectlombok:lombok'

        // Annotations
        compileOnly 'net.jcip:jcip-annotations:1.0'
        compileOnly 'com.github.spotbugs:spotbugs-annotations:3.1.3'
    }


    // ----- SpotBugs -------------------------------------

    apply plugin: 'com.github.spotbugs'

    spotbugs {
        toolVersion = '4.6.0'
        excludeFilter = file("${project.rootDir}/config/findbugs-exclude.xml")
    }
    spotbugsMain {
        reports {
            xml.required = false
            html.required = true
        }
    }
    spotbugsTest {
        enabled = false
    }


    // ----- Checkstyle -----------------------------------

    apply plugin: 'checkstyle'

    checkstyle {
        toolVersion = '8.18'
        configFile = file("${project.rootDir}/config/checkstyle.xml")
    }
}


// ----- JaCoCo -------------------------------------------

task jacocoMerge(type: JacocoMerge) {
    dependsOn(subprojects.jacocoTestReport.dependsOn)
    mustRunAfter(subprojects.jacocoTestReport.mustRunAfter)
    destinationFile = file("${buildDir}/jacoco/test.exec")
    executionData = files(subprojects.jacocoTestReport.executionData)
        .filter { f -> f.exists() }
}

jacocoTestReport {
    dependsOn(jacocoMerge)
    reports {
        xml.required = true
        html.required = true
    }

    additionalSourceDirs.setFrom(files(subprojects.sourceSets.main.allSource.srcDirs))
    sourceDirectories.setFrom(files(subprojects.sourceSets.main.allSource.srcDirs))
    classDirectories.setFrom(files(subprojects.sourceSets.main.output))
}


// ----- Build Time Tracker -------------------------------

apply plugin: 'build-time-tracker'

buildtimetracker {
    reporters {
        summary {
            ordered true
            barstyle 'ascii'
        }
    }
}
